{"version":3,"sources":["components/Searchbar.jsx","components/CloseBtn.jsx","images/image.jpg","components/ImageGalleryItem.jsx","components/ImageGallery.jsx","services/imageApi.js","components/Modal.jsx","components/Button.jsx","App.js","index.js"],"names":["Searchbar","state","queryValue","handleSearchQuery","ev","setState","target","value","heandleSendValue","preventDefault","props","onSendQuery","className","type","onClick","this","autoComplete","autoFocus","placeholder","onChange","Component","protoType","PropTypes","func","CloseBtn","onClickBtn","id","ImageGalleryItem","image","onImageClick","useState","hover","setHover","webformatURL","largeImageURL","tags","onMouseOver","onMouseLeave","src","srcSet","alt","srcset","defaultProps","images","defaultImage","arrayOf","exact","string","ImageGallery","map","array","elementType","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImages","q","page","get","then","res","data","hits","propTypes","queryResult","number","Modal","handleEscClick","code","toggleModal","handleOverlayClick","currentTarget","window","addEventListener","removeEventListener","children","Button","App","imageUrl","modalStatus","loaderStatus","error","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","scrollBy","options","prevState","length","catch","finally","handleQuery","query","alert","openModal","url","deleteImg","imageId","console","log","filteredImages","filter","Number","prevProps","renderBtn","color","height","width","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2ac2186d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass Searchbar extends Component {\n    state = {\n        queryValue: ''\n    }\n\n    handleSearchQuery = (ev) => {\n        this.setState({ queryValue: ev.target.value })\n    }\n\n    heandleSendValue = (ev) => {\n        ev.preventDefault()\n        if (this.state.queryValue !== '') {\n            this.props.onSendQuery(this.state.queryValue)\n            this.setState({ queryValue: '' })\n        }\n    }\n\n    render() {\n        return (\n            <header className=\"Searchbar\">\n                <form className=\"SearchForm\">\n                    <button\n                        type=\"submit\"\n                        className=\"SearchForm-button\"\n                        onClick={this.heandleSendValue}>\n                        <span className=\"SearchForm-button-label\">Search</span>\n                    </button>\n                    <input\n                        value={this.state.queryValue}\n                        className=\"SearchForm-input\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus placeholder=\"Search images and photos\"\n                        onChange={this.handleSearchQuery} />\n                </form>\n            </header>\n        )\n    }\n\n}\n\nSearchbar.protoType = {\n    heandleSendValue: PropTypes.func,\n    handleSearchQuery: PropTypes.func\n}\n\nexport default Searchbar;","import PropTypes from 'prop-types';\n\nconst CloseBtn = ({ onClickBtn, className, id }) => {\n    return (\n        <button className={className} onClick={onClickBtn} id={id}>X</button>\n    )\n}\n\nCloseBtn.protoType = {\n    onClickBtn: PropTypes.func\n}\n\nexport default CloseBtn;","export default __webpack_public_path__ + \"static/media/image.c05431f6.jpg\";","import PropTypes from 'prop-types';\nimport {useState} from \"react\";\n\nimport CloseBtn from \"./CloseBtn\";\n\nimport defaultImage from '../images/image.jpg'\n\nconst ImageGalleryItem = ({ image, onImageClick, onClickBtn }) => {\n    const [hover, setHover] = useState(false);\n\n    const { webformatURL, largeImageURL, id, tags } = image;\n\n    const nandleImgClick = ev => {\n        onImageClick(ev.target.srcset)\n    }\n\n    const handleClickDelBtn = (ev) => {\n        onClickBtn(ev.target.id)\n    \n    }\n\n    const showBtn = () => {\n        setHover(true)\n    }\n\n    const notShowBtn = () => {\n        setHover(false)\n    }\n\n    return (\n        <li className=\"ImageGalleryItem\" key={id} id={id} onMouseOver={showBtn} onMouseLeave={notShowBtn}>\n            <div className=\"img_gallery_overlay\">\n                <img src={webformatURL}\n                srcSet={largeImageURL}\n                alt={tags} className=\"ImageGalleryItem-image\"\n                onClick={nandleImgClick} />\n                {hover && <CloseBtn className=\"close_modal_btn\" id={id} onClickBtn={handleClickDelBtn}/>}\n           </div>\n        </li >\n    )\n}\n\nImageGalleryItem.defaultProps = {\n    images: [],\n    src: defaultImage,\n    srcSet: defaultImage,\n    alt: 'photo'\n};\n\nImageGalleryItem.protoType = {\n    images: PropTypes.arrayOf(PropTypes.exact({\n        src: PropTypes.string,\n        srcSet: PropTypes.string,\n        tags: PropTypes.string,\n    })),\n    onImageClick: PropTypes.func\n}\n\nexport default ImageGalleryItem;","import PropTypes from \"prop-types\";\n\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onImageClick, onClickBtn }) => {\n    return (\n        <ul className=\"ImageGallery\">\n            {images.map((image) => (\n                <ImageGalleryItem\n                    key={image.id}\n                    image={image}\n                    onImageClick={onImageClick}\n                    onClickBtn={onClickBtn}\n                />))\n            }\n        </ul>\n    )\n}\n\nImageGallery.protoType = {\n    images: PropTypes.array,\n    onImageClick: PropTypes.func,\n    ImageGalleryItem: PropTypes.elementType\n}\n\nexport default ImageGallery;","import axios from \"axios\";\nimport PropTypes from 'prop-types';\n\nconst BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = '19685928-f191ac91b9da632ea9a4b744f';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n    key: API_KEY,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    per_page: 12\n}\n\nconst fetchImages = ({ q, page = 1 }) => {\n    return axios\n        .get('', { params: { q, page } })\n        .then(res => res.data.hits)\n}\n\nfetchImages.propTypes = {\n    queryResult: PropTypes.string,\n    page: PropTypes.number\n};\n\nexport default fetchImages;","import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass Modal extends Component {\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleEscClick)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleEscClick)\n\n    }\n\n    handleEscClick = (ev) => {\n        if (ev.code === \"Escape\") {\n            this.props.toggleModal()\n        }\n    }\n\n    handleOverlayClick = (ev) => {\n        if (ev.currentTarget === ev.target) {\n            this.props.toggleModal()\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"Overlay\" onClick={this.handleOverlayClick}>\n                <div className=\"Modal\">\n                    {this.props.children}\n                </div>\n            </div>\n        )\n    }\n}\n\nModal.protoType = {\n    handleEscClick: PropTypes.func,\n    toggleModal: PropTypes.func\n}\n\n\nexport default Modal;","import PropTypes from 'prop-types';\n\nconst Button = ({ onClickBtn }) => {\n    return (\n        <button className=\"Button\" onClick={onClickBtn}>Load more...</button>\n    )\n}\n\nButton.protoType = {\n    onClickBtn: PropTypes.func\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './services/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\nimport CloseBtn from './components/CloseBtn';\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nclass App extends Component {\n\n  state = {\n    queryResult: '',\n    images: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n    error: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.fetchImages()\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    let viewPortHeight = document.documentElement.clientWidth;\n    window.scrollBy(0, viewPortHeight)\n  }\n\n  toggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  fetchImages = () => {\n    const { queryResult, page } = this.state;\n    const q = queryResult\n    const options = { q, page }\n    this.setState(prevState => ({ page: prevState.page + 1, loaderStatus: true }));\n\n    fetchImages(options)\n      .then((images) => {\n        if (images.length > 0) {\n          this.setState((prevState) => ({ images: [...prevState.images, ...images] }))\n        } else {\n          this.setState({ error: true })\n        }\n      })\n      .catch(() => this.setState({ error: true }))\n      .finally(() => this.setState({ loaderStatus: false }))\n  }\n\n  handleQuery = (query) => {\n    if (query !== this.state.queryResult) {\n      this.setState(({ queryResult: query, page: 1, images: [], error: false }))\n    } else {\n      alert('this request has already been completed')\n    }\n  }\n\n  openModal = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.toggleModal()\n  }\n\n  deleteImg = (imageId) => {\n  \n    console.log('id', imageId);\n    console.log(this.state.images);\n\n    //const mapImg = this.state.images.map(({id}) => console.log(id))\n    //console.log(\"mapImg\", mapImg)\n    //console.log(\"typeof\", typeof imageId)\n    const filteredImages = this.state.images.filter(({ id }) => id !== Number(imageId));\n     console.log('filteredImages', filteredImages)\n\n      this.setState({images: filteredImages});    \n  }\n\n\n\n  render() {\n    const { images, imageUrl, modalStatus, loaderStatus, error } = this.state;\n    const renderBtn = images.length !== 0 && !loaderStatus;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onSendQuery={this.handleQuery} />\n        {error && <h1 className=\"ErrorMessage\">No result found!</h1>}\n        {images.length > 0 && < ImageGallery images={images} onImageClick={this.openModal} onClickBtn={this.deleteImg}/>}\n        {loaderStatus && <Loader type=\"Circles\" color=\" #3f51b5\" height={100} width={100} className=\"Loader\" />}\n        {renderBtn && <Button\n          type=\"button\"\n          onClickBtn={this.fetchImages}\n          className=\"Button\" />}\n        {!!modalStatus &&\n          <Modal toggleModal={this.toggleModal}>\n          <div className=\"modal\">\n            <img src={imageUrl} alt=\"pic\" className=\"modal_img\"/>\n            <CloseBtn onClickBtn={this.openModal} id={imageUrl} className=\"close_modal_btn\"/>\n            {/* <button className=\"close_modal_btn\" onClick={this.openModal}>x</button> */}\n          </div>\n         \n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n//import style from './components/'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//reportWebVitals();\n"],"sourceRoot":""}