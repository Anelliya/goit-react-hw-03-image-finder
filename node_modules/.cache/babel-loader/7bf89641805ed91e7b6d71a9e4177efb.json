{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      querySearch: '',\n      queryResult: [],\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false,\n      messagesEndRef: /*#__PURE__*/React.createRef()\n    };\n\n    this.scrollToBottom = () => {};\n\n    this.handleToggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.handleFetchApi = query => {\n      fetchImages(query, this.state.page).then(res => {\n        this.setState(prevState => ({\n          queryResult: [...prevState.queryResult, ...res.data.hits]\n        }));\n      }).catch(error => console.log(\"error\", error));\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n      this.setState({\n        loaderStatus: false\n      });\n    };\n\n    this.handleQueruSearch = query => {\n      this.setState({\n        loaderStatus: true,\n        querySearch: query,\n        page: 1,\n        queryResult: []\n      });\n    };\n\n    this.handleOnClickImage = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n\n    this.hangleLoadMore = () => {\n      console.log('hello', this.state.querySearch, this.state.page);\n      this.handleFetchApi(this.state.querySearch);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.querySearch !== this.state.querySearch) {\n      console.log('fetch get page', this.state.page);\n      console.log('fetch get query', this.state.querySearch);\n      this.handleFetchApi(this.state.querySearch);\n    }\n\n    window.scrollTo({\n      bottom: window.innerHeight,\n      behavior: \"smooth\"\n    });\n    console.log('button', window.innerHeight); // let wHeight = window.innerHeight;\n    // window.scrollY = wHeight;\n  }\n\n  render() {\n    const {\n      queryResult,\n      imageUrl,\n      modalStatus,\n      loaderStatus,\n      messagesEndRef\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: queryResult,\n        onImageClick: this.handleOnClickImage,\n        loaderStatus: loaderStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 36\n      }, this), queryResult.length > 11 && /*#__PURE__*/_jsxDEV(Button, {\n        onButtonClick: this.hangleLoadMore,\n        className: \"Button\",\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 37\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        handleToggleModal: this.handleToggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"some pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Loader","Searchbar","ImageGallery","fetchImages","Modal","Button","App","state","querySearch","queryResult","page","imageUrl","modalStatus","loaderStatus","messagesEndRef","createRef","scrollToBottom","handleToggleModal","setState","handleFetchApi","query","then","res","prevState","data","hits","catch","error","console","log","handleQueruSearch","handleOnClickImage","url","hangleLoadMore","componentDidUpdate","prevProps","window","scrollTo","bottom","innerHeight","behavior","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass App extends Component {\n\n  state = {\n    querySearch: '',\n    queryResult: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n    messagesEndRef: React.createRef()\n\n  }\n\n\n    ;\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.querySearch !== this.state.querySearch) {\n      console.log('fetch get page', this.state.page)\n      console.log('fetch get query', this.state.querySearch)\n      this.handleFetchApi(this.state.querySearch)\n\n    }\n    window.scrollTo({ bottom: window.innerHeight, behavior: \"smooth\" })\n    console.log('button', window.innerHeight)\n\n\n    // let wHeight = window.innerHeight;\n    // window.scrollY = wHeight;\n\n\n\n  }\n\n  scrollToBottom = () => {\n  }\n\n  handleToggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  handleFetchApi = (query) => {\n    fetchImages(query, this.state.page)\n      .then((res) => {\n        this.setState((prevState) => ({ queryResult: [...prevState.queryResult, ...res.data.hits] }))\n      })\n      .catch(error => console.log(\"error\", error))\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.setState({ loaderStatus: false })\n\n  }\n\n  handleQueruSearch = (query) => {\n    this.setState(({\n      loaderStatus: true,\n      querySearch: query,\n      page: 1,\n      queryResult: []\n    }))\n  }\n\n  handleOnClickImage = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.handleToggleModal()\n  }\n\n  hangleLoadMore = () => {\n    console.log('hello', this.state.querySearch, this.state.page)\n    this.handleFetchApi(this.state.querySearch)\n\n  }\n\n  render() {\n    const { queryResult, imageUrl, modalStatus, loaderStatus, messagesEndRef } = this.state;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onClick={this.handleQueruSearch} />\n        {queryResult.length > 0 && < ImageGallery images={queryResult} onImageClick={this.handleOnClickImage}\n          loaderStatus={loaderStatus} />}\n        {queryResult.length > 11 && <Button onButtonClick={this.hangleLoadMore} className=\"Button\" ref={messagesEndRef} />}\n\n\n        {!!modalStatus &&\n          <Modal handleToggleModal={this.handleToggleModal}>\n            <img src={imageUrl} alt=\"some pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}