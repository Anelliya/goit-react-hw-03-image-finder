{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryResult: '',\n      images: [],\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false\n    };\n\n    this.scrollToBottom = () => {\n      let viewPortHeight = document.documentElement.clientWidth;\n      window.scrollBy(0, viewPortHeight);\n    };\n\n    this.handleToggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.handleFetchApi = () => {\n      const {\n        queryResult,\n        page\n      } = this.state;\n      const options = {\n        queryResult,\n        page\n      };\n      this.setState(prevState => ({\n        page: prevState.page + 1,\n        loaderStatus: true\n      }));\n      fetchImages(options).then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images]\n        }));\n      }).catch(error => console.log(\"error\", error)).finally(() => this.setState({\n        loaderStatus: false\n      }));\n    };\n\n    this.handleQueruSearch = query => {\n      this.setState({\n        queryResult: query,\n        page: 1,\n        images: []\n      });\n    };\n\n    this.handleOpenModal = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.handleFetchApi();\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    console.log(\"loader\", this.state.loaderStatus);\n    const {\n      images,\n      imageUrl,\n      modalStatus,\n      loaderStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images,\n        onImageClick: this.handleOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 31\n      }, this), loaderStatus && /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Circles\",\n        color: \" #3f51b5\",\n        height: 100,\n        width: 100,\n        className: \"Loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 26\n      }, this), images.length >= 12 && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onButtonClick: this.handleFetchApi,\n        className: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 33\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        handleToggleModal: this.handleToggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Loader","Searchbar","ImageGallery","fetchImages","Modal","Button","App","state","queryResult","images","page","imageUrl","modalStatus","loaderStatus","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","window","scrollBy","handleToggleModal","setState","handleFetchApi","options","prevState","then","catch","error","console","log","finally","handleQueruSearch","query","handleOpenModal","url","componentDidUpdate","prevProps","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,WAAP;AACA,OAAO,+DAAP;;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,WAAW,EAAE,KALP;AAMNC,MAAAA,YAAY,EAAE;AANR,KAFkB;;AAAA,SAqB1BC,cArB0B,GAqBT,MAAM;AACrB,UAAIC,cAAc,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAA9C;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBL,cAAnB;AACD,KAxByB;;AAAA,SA0B1BM,iBA1B0B,GA0BN,MAAM;AACxB,WAAKC,QAAL,CAAc,CAAC;AAAEV,QAAAA;AAAF,OAAD,MAAsB;AAClCA,QAAAA,WAAW,EAAE,CAACA;AADoB,OAAtB,CAAd;AAGD,KA9ByB;;AAAA,SAgC1BW,cAhC0B,GAgCT,MAAM;AACrB,YAAM;AAAEf,QAAAA,WAAF;AAAeE,QAAAA;AAAf,UAAwB,KAAKH,KAAnC;AACA,YAAMiB,OAAO,GAAG;AAAEhB,QAAAA,WAAF;AAAeE,QAAAA;AAAf,OAAhB;AACA,WAAKY,QAAL,CAAcG,SAAS,KAAK;AAAEf,QAAAA,IAAI,EAAEe,SAAS,CAACf,IAAV,GAAiB,CAAzB;AAA4BG,QAAAA,YAAY,EAAE;AAA1C,OAAL,CAAvB;AAEAV,MAAAA,WAAW,CAACqB,OAAD,CAAX,CACGE,IADH,CACSjB,MAAD,IAAY;AAAE,aAAKa,QAAL,CAAeG,SAAD,KAAgB;AAAEhB,UAAAA,MAAM,EAAE,CAAC,GAAGgB,SAAS,CAAChB,MAAd,EAAsB,GAAGA,MAAzB;AAAV,SAAhB,CAAd;AAA8E,OADpG,EAEGkB,KAFH,CAESC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAFlB,EAGGG,OAHH,CAGW,MAAM,KAAKT,QAAL,CAAc;AAAET,QAAAA,YAAY,EAAE;AAAhB,OAAd,CAHjB;AAID,KAzCyB;;AAAA,SA2C1BmB,iBA3C0B,GA2CLC,KAAD,IAAW;AAC7B,WAAKX,QAAL,CAAe;AAAEd,QAAAA,WAAW,EAAEyB,KAAf;AAAsBvB,QAAAA,IAAI,EAAE,CAA5B;AAA+BD,QAAAA,MAAM,EAAE;AAAvC,OAAf;AACD,KA7CyB;;AAAA,SA+C1ByB,eA/C0B,GA+CPC,GAAD,IAAS;AACzB,WAAKb,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEwB;AADE,OAAd;AAGA,WAAKd,iBAAL;AACD,KApDyB;AAAA;;AAW1Be,EAAAA,kBAAkB,CAACC,SAAD,EAAYZ,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACjB,WAAV,KAA0B,KAAKD,KAAL,CAAWC,WAAzC,EAAsD;AACpD,WAAKe,cAAL;AACD;;AAED,QAAI,KAAKhB,KAAL,CAAWE,MAAX,CAAkB6B,MAAlB,GAA2B,EAA/B,EAAmC;AACjC,WAAKxB,cAAL;AACD;AACF;;AAmCDyB,EAAAA,MAAM,GAAG;AACPV,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsB,KAAKvB,KAAL,CAAWM,YAAjC;AACA,UAAM;AAAEJ,MAAAA,MAAF;AAAUE,MAAAA,QAAV;AAAoBC,MAAAA,WAApB;AAAiCC,MAAAA;AAAjC,QAAkD,KAAKN,KAA7D;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAKyB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGvB,MAAM,CAAC6B,MAAP,GAAgB,CAAhB,iBAAqB,QAAE,YAAF;AAAe,QAAA,MAAM,EAAE7B,MAAvB;AAA+B,QAAA,YAAY,EAAE,KAAKyB;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFxB,EAGGrB,YAAY,iBAAI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,KAAK,EAAC,UAA7B;AAAwC,QAAA,MAAM,EAAE,GAAhD;AAAqD,QAAA,KAAK,EAAE,GAA5D;AAAiE,QAAA,SAAS,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,cAHnB,EAIGJ,MAAM,CAAC6B,MAAP,IAAiB,EAAjB,iBAAuB,QAAC,MAAD;AACtB,QAAA,IAAI,EAAC,QADiB;AAEtB,QAAA,aAAa,EAAE,KAAKf,cAFE;AAGtB,QAAA,SAAS,EAAC;AAHY;AAAA;AAAA;AAAA;AAAA,cAJ1B,EAQG,CAAC,CAACX,WAAF,iBACC,QAAC,KAAD;AAAO,QAAA,iBAAiB,EAAE,KAAKS,iBAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEV,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAzEyB;;AA4E5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass App extends Component {\n\n  state = {\n    queryResult: '',\n    images: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.handleFetchApi()\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    let viewPortHeight = document.documentElement.clientWidth;\n    window.scrollBy(0, viewPortHeight)\n  }\n\n  handleToggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  handleFetchApi = () => {\n    const { queryResult, page } = this.state;\n    const options = { queryResult, page }\n    this.setState(prevState => ({ page: prevState.page + 1, loaderStatus: true }));\n\n    fetchImages(options)\n      .then((images) => { this.setState((prevState) => ({ images: [...prevState.images, ...images] })) })\n      .catch(error => console.log(\"error\", error))\n      .finally(() => this.setState({ loaderStatus: false }))\n  }\n\n  handleQueruSearch = (query) => {\n    this.setState(({ queryResult: query, page: 1, images: [] }))\n  }\n\n  handleOpenModal = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.handleToggleModal()\n  }\n\n  render() {\n    console.log(\"loader\", this.state.loaderStatus)\n    const { images, imageUrl, modalStatus, loaderStatus } = this.state;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onClick={this.handleQueruSearch} />\n        {images.length > 0 && < ImageGallery images={images} onImageClick={this.handleOpenModal} />}\n        {loaderStatus && <Loader type=\"Circles\" color=\" #3f51b5\" height={100} width={100} className=\"Loader\" />}\n        {images.length >= 12 && <Button\n          type=\"button\"\n          onButtonClick={this.handleFetchApi}\n          className=\"Button\" />}\n        {!!modalStatus &&\n          <Modal handleToggleModal={this.handleToggleModal}>\n            <img src={imageUrl} alt=\"pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}