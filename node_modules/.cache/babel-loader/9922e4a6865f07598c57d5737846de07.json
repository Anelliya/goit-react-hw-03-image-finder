{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      querySearch: '',\n      queryResult: [],\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false\n    };\n\n    this.scrollToBottom = () => {\n      let viewPortHeight = document.documentElement.clientWidth;\n      window.scrollBy(0, viewPortHeight);\n    };\n\n    this.handleToggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.handleFetchApi = query => {\n      fetchImages(query, this.state.page).then(res => {\n        this.setState(prevState => ({\n          queryResult: [...prevState.queryResult, ...res.data.hits]\n        }));\n      }).catch(error => console.log(\"error\", error));\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n      this.setState({\n        loaderStatus: false\n      });\n    };\n\n    this.handleQueruSearch = query => {\n      this.setState({\n        loaderStatus: true,\n        querySearch: query,\n        page: 1,\n        queryResult: []\n      });\n    };\n\n    this.handleOnClickImage = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n\n    this.hangleLoadMore = () => {\n      console.log('hello', this.state.querySearch, this.state.page);\n      this.handleFetchApi(this.state.querySearch);\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.querySearch !== this.state.querySearch) {\n      console.log('fetch get page', this.state.page);\n      console.log('fetch get query', this.state.querySearch);\n      this.handleFetchApi(this.state.querySearch);\n      this.setState({\n        button: window.document.querySelector(\".Button\")\n      });\n    }\n\n    if (this.state.queryResult.length > 12) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    const {\n      queryResult,\n      imageUrl,\n      modalStatus,\n      loaderStatus,\n      messagesEndRef\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: queryResult,\n        onImageClick: this.handleOnClickImage,\n        loaderStatus: loaderStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 36\n      }, this), queryResult.length > 11 && /*#__PURE__*/_jsxDEV(Button, {\n        onButtonClick: this.hangleLoadMore,\n        className: \"Button\",\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 37\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        handleToggleModal: this.handleToggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"some pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Loader","Searchbar","ImageGallery","fetchImages","Modal","Button","App","state","querySearch","queryResult","page","imageUrl","modalStatus","loaderStatus","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","window","scrollBy","handleToggleModal","setState","handleFetchApi","query","then","res","prevState","data","hits","catch","error","console","log","handleQueruSearch","handleOnClickImage","url","hangleLoadMore","componentDidUpdate","prevProps","button","querySelector","length","render","messagesEndRef"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAGA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,WAAP;AACA,OAAO,+DAAP;;;AAGA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BQ,KAF0B,GAElB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,IAAI,EAAE,CAHA;AAINC,MAAAA,QAAQ,EAAE,EAJJ;AAKNC,MAAAA,WAAW,EAAE,KALP;AAMNC,MAAAA,YAAY,EAAE;AANR,KAFkB;;AAAA,SA0B1BC,cA1B0B,GA0BT,MAAM;AACrB,UAAIC,cAAc,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,WAA9C;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmBL,cAAnB;AACD,KA7ByB;;AAAA,SA+B1BM,iBA/B0B,GA+BN,MAAM;AACxB,WAAKC,QAAL,CAAc,CAAC;AAAEV,QAAAA;AAAF,OAAD,MAAsB;AAClCA,QAAAA,WAAW,EAAE,CAACA;AADoB,OAAtB,CAAd;AAGD,KAnCyB;;AAAA,SAqC1BW,cArC0B,GAqCRC,KAAD,IAAW;AAC1BrB,MAAAA,WAAW,CAACqB,KAAD,EAAQ,KAAKjB,KAAL,CAAWG,IAAnB,CAAX,CACGe,IADH,CACSC,GAAD,IAAS;AACb,aAAKJ,QAAL,CAAeK,SAAD,KAAgB;AAAElB,UAAAA,WAAW,EAAE,CAAC,GAAGkB,SAAS,CAAClB,WAAd,EAA2B,GAAGiB,GAAG,CAACE,IAAJ,CAASC,IAAvC;AAAf,SAAhB,CAAd;AACD,OAHH,EAIGC,KAJH,CAISC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAJlB;AAKA,WAAKT,QAAL,CAAcK,SAAS,KAAK;AAAEjB,QAAAA,IAAI,EAAEiB,SAAS,CAACjB,IAAV,GAAiB;AAAzB,OAAL,CAAvB;AACA,WAAKY,QAAL,CAAc;AAAET,QAAAA,YAAY,EAAE;AAAhB,OAAd;AAED,KA9CyB;;AAAA,SAgD1BqB,iBAhD0B,GAgDLV,KAAD,IAAW;AAC7B,WAAKF,QAAL,CAAe;AACbT,QAAAA,YAAY,EAAE,IADD;AAEbL,QAAAA,WAAW,EAAEgB,KAFA;AAGbd,QAAAA,IAAI,EAAE,CAHO;AAIbD,QAAAA,WAAW,EAAE;AAJA,OAAf;AAMD,KAvDyB;;AAAA,SAyD1B0B,kBAzD0B,GAyDJC,GAAD,IAAS;AAC5B,WAAKd,QAAL,CAAc;AACZX,QAAAA,QAAQ,EAAEyB;AADE,OAAd;AAGA,WAAKf,iBAAL;AACD,KA9DyB;;AAAA,SAgE1BgB,cAhE0B,GAgET,MAAM;AACrBL,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAK1B,KAAL,CAAWC,WAAhC,EAA6C,KAAKD,KAAL,CAAWG,IAAxD;AACA,WAAKa,cAAL,CAAoB,KAAKhB,KAAL,CAAWC,WAA/B;AACD,KAnEyB;AAAA;;AAa1B8B,EAAAA,kBAAkB,CAACC,SAAD,EAAYZ,SAAZ,EAAuB;AACvC,QAAIA,SAAS,CAACnB,WAAV,KAA0B,KAAKD,KAAL,CAAWC,WAAzC,EAAsD;AACpDwB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAK1B,KAAL,CAAWG,IAAzC;AACAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAK1B,KAAL,CAAWC,WAA1C;AACA,WAAKe,cAAL,CAAoB,KAAKhB,KAAL,CAAWC,WAA/B;AACA,WAAKc,QAAL,CAAc;AAAEkB,QAAAA,MAAM,EAAErB,MAAM,CAACH,QAAP,CAAgByB,aAAhB,CAA8B,SAA9B;AAAV,OAAd;AAED;;AACD,QAAI,KAAKlC,KAAL,CAAWE,WAAX,CAAuBiC,MAAvB,GAAgC,EAApC,EAAwC;AACtC,WAAK5B,cAAL;AACD;AACF;;AA6CD6B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElC,MAAAA,WAAF;AAAeE,MAAAA,QAAf;AAAyBC,MAAAA,WAAzB;AAAsCC,MAAAA,YAAtC;AAAoD+B,MAAAA;AAApD,QAAuE,KAAKrC,KAAlF;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,KAAK2B;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EAEGzB,WAAW,CAACiC,MAAZ,GAAqB,CAArB,iBAA0B,QAAE,YAAF;AAAe,QAAA,MAAM,EAAEjC,WAAvB;AAAoC,QAAA,YAAY,EAAE,KAAK0B,kBAAvD;AACzB,QAAA,YAAY,EAAEtB;AADW;AAAA;AAAA;AAAA;AAAA,cAF7B,EAIGJ,WAAW,CAACiC,MAAZ,GAAqB,EAArB,iBAA2B,QAAC,MAAD;AAAQ,QAAA,aAAa,EAAE,KAAKL,cAA5B;AAA4C,QAAA,SAAS,EAAC,QAAtD;AAA+D,QAAA,GAAG,EAAEO;AAApE;AAAA;AAAA;AAAA;AAAA,cAJ9B,EAKG,CAAC,CAAChC,WAAF,iBACC,QAAC,KAAD;AAAO,QAAA,iBAAiB,EAAE,KAAKS,iBAA/B;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEV,QAAV;AAAoB,UAAA,GAAG,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AApFyB;;AAuF5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass App extends Component {\n\n  state = {\n    querySearch: '',\n    queryResult: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n  }\n\n\n    ;\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.querySearch !== this.state.querySearch) {\n      console.log('fetch get page', this.state.page)\n      console.log('fetch get query', this.state.querySearch)\n      this.handleFetchApi(this.state.querySearch)\n      this.setState({ button: window.document.querySelector(\".Button\") })\n\n    }\n    if (this.state.queryResult.length > 12) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    let viewPortHeight = document.documentElement.clientWidth;\n    window.scrollBy(0, viewPortHeight)\n  }\n\n  handleToggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  handleFetchApi = (query) => {\n    fetchImages(query, this.state.page)\n      .then((res) => {\n        this.setState((prevState) => ({ queryResult: [...prevState.queryResult, ...res.data.hits] }))\n      })\n      .catch(error => console.log(\"error\", error))\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n    this.setState({ loaderStatus: false })\n\n  }\n\n  handleQueruSearch = (query) => {\n    this.setState(({\n      loaderStatus: true,\n      querySearch: query,\n      page: 1,\n      queryResult: []\n    }))\n  }\n\n  handleOnClickImage = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.handleToggleModal()\n  }\n\n  hangleLoadMore = () => {\n    console.log('hello', this.state.querySearch, this.state.page)\n    this.handleFetchApi(this.state.querySearch)\n  }\n\n  render() {\n    const { queryResult, imageUrl, modalStatus, loaderStatus, messagesEndRef } = this.state;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onClick={this.handleQueruSearch} />\n        {queryResult.length > 0 && < ImageGallery images={queryResult} onImageClick={this.handleOnClickImage}\n          loaderStatus={loaderStatus} />}\n        {queryResult.length > 11 && <Button onButtonClick={this.hangleLoadMore} className=\"Button\" ref={messagesEndRef} />}\n        {!!modalStatus &&\n          <Modal handleToggleModal={this.handleToggleModal}>\n            <img src={imageUrl} alt=\"some pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}