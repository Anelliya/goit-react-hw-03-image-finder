{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryResult: '',\n      images: [],\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false\n    };\n\n    this.scrollToBottom = () => {\n      let viewPortHeight = document.documentElement.clientWidth;\n      window.scrollBy(0, viewPortHeight);\n    };\n\n    this.handleToggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.handleFetchApi = () => {\n      const {\n        queryResult,\n        page\n      } = this.state;\n      const options = {\n        queryResult,\n        page\n      };\n      fetchImages(options).then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images]\n        }));\n      }).catch(error => console.log(\"error\", error));\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n\n    this.handleQueruSearch = query => {\n      this.setState({\n        loaderStatus: true,\n        queryResult: query,\n        page: 1,\n        images: []\n      });\n    };\n\n    this.handleOpenModal = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.handleFetchApi();\n    }\n\n    if (prevState.images !== this.state.images) {\n      this.setState({\n        loaderStatus: false\n      });\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    console.log(\"loader\", this.state.loaderStatus);\n    const {\n      images,\n      imageUrl,\n      modalStatus,\n      loaderStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images,\n        onImageClick: this.handleOpenModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 31\n      }, this), loaderStatus && /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Rings\",\n        color: \" #3f51b5\",\n        height: 70,\n        width: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 26\n      }, this), images.length > 11 && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onButtonClick: this.handleFetchApi,\n        className: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 32\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        handleToggleModal: this.handleToggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Loader","Searchbar","ImageGallery","fetchImages","Modal","Button","App","state","queryResult","images","page","imageUrl","modalStatus","loaderStatus","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","window","scrollBy","handleToggleModal","setState","handleFetchApi","options","then","prevState","catch","error","console","log","handleQueruSearch","query","handleOpenModal","url","componentDidUpdate","prevProps","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass App extends Component {\n\n  state = {\n    queryResult: '',\n    images: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.handleFetchApi()\n    }\n\n    if (prevState.images !== this.state.images) {\n      this.setState({ loaderStatus: false })\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    let viewPortHeight = document.documentElement.clientWidth;\n    window.scrollBy(0, viewPortHeight)\n  }\n\n  handleToggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  handleFetchApi = () => {\n    const { queryResult, page } = this.state;\n    const options = { queryResult, page }\n\n    fetchImages(options)\n      .then((images) => {\n        this.setState((prevState) => ({ images: [...prevState.images, ...images] }))\n      })\n      .catch(error => console.log(\"error\", error))\n\n    this.setState(prevState => ({ page: prevState.page + 1 }));\n  }\n\n  handleQueruSearch = (query) => {\n    this.setState(({ loaderStatus: true, queryResult: query, page: 1, images: [] }))\n  }\n\n  handleOpenModal = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.handleToggleModal()\n  }\n\n  render() {\n    console.log(\"loader\", this.state.loaderStatus)\n    const { images, imageUrl, modalStatus, loaderStatus } = this.state;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onClick={this.handleQueruSearch} />\n        {images.length > 0 && < ImageGallery images={images} onImageClick={this.handleOpenModal} />}\n        {loaderStatus && <Loader type=\"Rings\" color=\" #3f51b5\" height={70} width={70} />}\n        {images.length > 11 && <Button\n          type=\"button\"\n          onButtonClick={this.handleFetchApi}\n          className=\"Button\" />}\n        {!!modalStatus &&\n          <Modal handleToggleModal={this.handleToggleModal}>\n            <img src={imageUrl} alt=\"pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}