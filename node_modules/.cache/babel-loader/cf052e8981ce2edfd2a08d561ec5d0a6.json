{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryResult: '',\n      images: [],\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false,\n      error: false\n    };\n\n    this.scrollToBottom = () => {\n      let viewPortHeight = document.documentElement.clientWidth;\n      window.scrollBy(0, viewPortHeight);\n    };\n\n    this.toggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.fetchImages = () => {\n      const {\n        queryResult,\n        page\n      } = this.state;\n      const options = {\n        queryResult,\n        page\n      };\n      this.setState(prevState => ({\n        page: prevState.page + 1,\n        loaderStatus: true\n      }));\n      fetchImages(options).then(images => {\n        console.log(images);\n\n        if (images.length > 0) {\n          this.setState(prevState => ({\n            images: [...prevState.images, ...images]\n          }));\n        } else {\n          this.setState({\n            error: true\n          });\n        }\n      }).catch(() => this.setState({\n        error: true\n      })).finally(() => this.setState({\n        loaderStatus: false\n      }));\n    };\n\n    this.handleQuery = query => {\n      this.setState({\n        queryResult: query,\n        page: 1,\n        images: [],\n        error: false\n      });\n    };\n\n    this.openModal = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.toggleModal();\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.fetchImages();\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom();\n    }\n  }\n\n  render() {\n    const {\n      images,\n      imageUrl,\n      modalStatus,\n      loaderStatus,\n      error\n    } = this.state;\n    const renderBtn = images.length >= 12;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"ErrorMessage\",\n        children: \"Something went wrong, please try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: images,\n        onImageClick: this.openModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }, this), loaderStatus && /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Circles\",\n        color: \" #3f51b5\",\n        height: 100,\n        width: 100,\n        className: \"Loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 26\n      }, this), renderBtn && /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onButtonClick: this.fetchImages,\n        className: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 23\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        toggleModal: this.toggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["React","Component","Loader","Searchbar","ImageGallery","fetchImages","Modal","Button","App","state","queryResult","images","page","imageUrl","modalStatus","loaderStatus","error","scrollToBottom","viewPortHeight","document","documentElement","clientWidth","window","scrollBy","toggleModal","setState","options","prevState","then","console","log","length","catch","finally","handleQuery","query","openModal","url","componentDidUpdate","prevProps","render","renderBtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImages from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\nclass App extends Component {\n\n  state = {\n    queryResult: '',\n    images: [],\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n    error: false,\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.queryResult !== this.state.queryResult) {\n      this.fetchImages()\n    }\n\n    if (this.state.images.length > 12) {\n      this.scrollToBottom()\n    }\n  }\n\n  scrollToBottom = () => {\n    let viewPortHeight = document.documentElement.clientWidth;\n    window.scrollBy(0, viewPortHeight)\n  }\n\n  toggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  fetchImages = () => {\n    const { queryResult, page } = this.state;\n    const options = { queryResult, page }\n    this.setState(prevState => ({ page: prevState.page + 1, loaderStatus: true }));\n\n    fetchImages(options)\n      .then((images) => {\n        console.log(images)\n        if (images.length > 0) {\n          this.setState((prevState) => ({ images: [...prevState.images, ...images] }))\n        } else {\n          this.setState({ error: true })\n        }\n      })\n      .catch(() => this.setState({ error: true }))\n      .finally(() => this.setState({ loaderStatus: false }))\n  }\n\n  handleQuery = (query) => {\n    this.setState(({ queryResult: query, page: 1, images: [], error: false }))\n  }\n\n  openModal = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.toggleModal()\n  }\n\n  render() {\n    const { images, imageUrl, modalStatus, loaderStatus, error } = this.state;\n    const renderBtn = images.length >= 12;\n\n    return (\n      <div className=\"Container\">\n        <Searchbar onClick={this.handleQuery} />\n        {error && <h1 className=\"ErrorMessage\">Something went wrong, please try again!</h1>}\n        {images.length > 0 && < ImageGallery images={images} onImageClick={this.openModal} />}\n        {loaderStatus && <Loader type=\"Circles\" color=\" #3f51b5\" height={100} width={100} className=\"Loader\" />}\n        {renderBtn && <Button\n          type=\"button\"\n          onButtonClick={this.fetchImages}\n          className=\"Button\" />}\n        {!!modalStatus &&\n          <Modal toggleModal={this.toggleModal}>\n            <img src={imageUrl} alt=\"pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}