{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImage from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryValue: '',\n      queryResult: {},\n      page: 1,\n      imageUrl: '',\n      modalStatus: false\n    };\n\n    this.handleEscapeClick = () => {\n      window.addEventListener('keydown', event => {\n        if (this.state.modalStatus && event.code === \"Escape\") {\n          this.handleToggleModal();\n        }\n      });\n    };\n\n    this.handleFetchQuery = () => {\n      if (this.state.queryValue !== '') {\n        fetchImage(this.state.queryValue, this.state.page).then(res => this.setState({\n          queryResult: res.data.hits\n        })).catch(error => console.log(\"error\", error));\n      }\n    };\n\n    this.handleToggleModal = () => {\n      this.setState(prevState => ({\n        modalStatus: !prevState.modalStatus\n      }));\n    };\n\n    this.handleQueruValue = queryValue => {\n      console.log('get', queryValue);\n      this.setState({\n        queryValue: queryValue\n      });\n    };\n\n    this.handleOnClickImage = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n  }\n\n  componentDidMount() {\n    this.handleEscapeClick();\n  }\n\n  componentDidUpdate() {\n    this.handleFetchQuery();\n  }\n\n  render() {\n    const {\n      queryResult,\n      imageUrl,\n      modalStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: queryResult,\n        heandleClick: this.handleOnClickImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        imageUrl: imageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["Component","Loader","Searchbar","ImageGallery","fetchImage","Modal","Button","App","state","queryValue","queryResult","page","imageUrl","modalStatus","handleEscapeClick","window","addEventListener","event","code","handleToggleModal","handleFetchQuery","then","res","setState","data","hits","catch","error","console","log","prevState","handleQueruValue","handleOnClickImage","url","componentDidMount","componentDidUpdate","render","length"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImage from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\n\nclass App extends Component {\n\n  state = {\n    queryValue: '',\n    queryResult: {},\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n  }\n\n  componentDidMount() {\n    this.handleEscapeClick();\n  }\n\n  componentDidUpdate() {\n    this.handleFetchQuery();\n  }\n\n  handleEscapeClick = () => {\n    window.addEventListener('keydown', (event) => {\n      if (this.state.modalStatus && event.code === \"Escape\") {\n        this.handleToggleModal()\n      }\n    })\n  }\n\n  handleFetchQuery = () => {\n    if (this.state.queryValue !== '') {\n      fetchImage(this.state.queryValue, this.state.page)\n        .then(res => this.setState({ queryResult: res.data.hits }))\n        .catch(error => console.log(\"error\", error))\n    }\n  }\n\n  handleToggleModal = () => {\n    this.setState(prevState => ({\n      modalStatus: !prevState.modalStatus\n    }))\n  }\n\n  handleQueruValue = (queryValue) => {\n    console.log('get', queryValue)\n    this.setState({ queryValue: queryValue })\n  }\n\n  handleOnClickImage = (url) => {\n    this.setState({\n      imageUrl: url\n    })\n    this.handleToggleModal()\n\n  }\n\n  render() {\n    const { queryResult, imageUrl, modalStatus } = this.state;\n\n    return (\n      <div >\n        <Searchbar onClick={this.handleQueruValue} />\n        {queryResult.length > 0 && <ImageGallery images={queryResult} heandleClick={this.handleOnClickImage} />}\n        {queryResult.length > 0 && <Button />}\n        {!!modalStatus && <Modal imageUrl={imageUrl} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}