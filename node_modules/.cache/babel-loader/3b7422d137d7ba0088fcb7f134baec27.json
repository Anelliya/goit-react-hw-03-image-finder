{"ast":null,"code":"var _jsxFileName = \"/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js\";\nimport { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImage from './components/imageApi';\nimport Modal from './components/Modal';\nimport Button from \"./components/Button\";\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      queryValue: '',\n      queryResult: {},\n      page: 1,\n      imageUrl: '',\n      modalStatus: false,\n      loaderStatus: false\n    };\n\n    this.handleFetchQuery = () => {\n      if (this.state.queryValue !== '') {\n        fetchImage(this.state.queryValue, this.state.page).then(res => this.setState({\n          queryResult: res.data.hits\n        })).catch(error => console.log(\"error\", error));\n      }\n    };\n\n    this.handleToggleModal = () => {\n      this.setState(({\n        modalStatus\n      }) => ({\n        modalStatus: !modalStatus\n      }));\n    };\n\n    this.handleQueruValue = queryValue => {\n      this.setState({\n        queryValue: queryValue\n      });\n    };\n\n    this.handleOnClickImage = url => {\n      this.setState({\n        imageUrl: url\n      });\n      this.handleToggleModal();\n    };\n  }\n\n  componentDidUpdate() {\n    this.handleFetchQuery();\n  }\n\n  render() {\n    const {\n      queryResult,\n      imageUrl,\n      modalStatus,\n      loaderStatus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n        onClick: this.handleQueruValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), loaderStatus && /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Rings\",\n        color: \"#3f51b5\",\n        height: 100,\n        width: 100 //timeout={1000} //3 secs\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(ImageGallery, {\n        images: queryResult,\n        handleClick: this.handleOnClickImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }, this), queryResult.length > 0 && /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }, this), !!modalStatus && /*#__PURE__*/_jsxDEV(Modal, {\n        handleToggleModal: this.handleToggleModal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"some pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/helen/Documents/Projects/React/goit-react-hw-03-image-finder/src/App.js"],"names":["Component","Loader","Searchbar","ImageGallery","fetchImage","Modal","Button","App","state","queryValue","queryResult","page","imageUrl","modalStatus","loaderStatus","handleFetchQuery","then","res","setState","data","hits","catch","error","console","log","handleToggleModal","handleQueruValue","handleOnClickImage","url","componentDidUpdate","render","length"],"mappings":"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","sourcesContent":["import { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\n\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport fetchImage from './components/imageApi';\nimport Modal from './components/Modal'\nimport Button from \"./components/Button\";\n\nimport './App.css';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n\n\nclass App extends Component {\n\n  state = {\n    queryValue: '',\n    queryResult: {},\n    page: 1,\n    imageUrl: '',\n    modalStatus: false,\n    loaderStatus: false,\n  }\n\n  componentDidUpdate() {\n    this.handleFetchQuery();\n\n  }\n\n  handleFetchQuery = () => {\n    if (this.state.queryValue !== '') {\n      fetchImage(this.state.queryValue, this.state.page)\n        .then(res => this.setState({ queryResult: res.data.hits }))\n        .catch(error => console.log(\"error\", error))\n    }\n  }\n\n  handleToggleModal = () => {\n    this.setState(({ modalStatus }) => ({\n      modalStatus: !modalStatus\n    }))\n  }\n\n  handleQueruValue = (queryValue) => {\n    this.setState({ queryValue: queryValue })\n  }\n\n  handleOnClickImage = (url) => {\n    this.setState({\n      imageUrl: url,\n    })\n    this.handleToggleModal()\n  }\n\n  render() {\n    const { queryResult, imageUrl, modalStatus, loaderStatus } = this.state;\n\n    return (\n      <div >\n        <Searchbar onClick={this.handleQueruValue} />\n        {loaderStatus && <Loader\n          type=\"Rings\"\n          color=\"#3f51b5\"\n          height={100}\n          width={100}\n        //timeout={1000} //3 secs\n        />}\n        {queryResult.length > 0 && < ImageGallery images={queryResult} handleClick={this.handleOnClickImage} />}\n        {queryResult.length > 0 && <Button />}\n        {!!modalStatus &&\n          <Modal handleToggleModal={this.handleToggleModal}>\n            <img src={imageUrl} alt=\"some pic\" />\n          </Modal>}\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}